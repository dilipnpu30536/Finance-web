<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Excel Data Dual Axis Line Graph</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
        }

        canvas {
            border: 1px solid #ddd;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }
    </style>
</head>
<body>
    <canvas id="myChart"></canvas>

    <script>
        // Fetch Excel data
        fetch('./data.xlsx')
            .then(response => response.arrayBuffer())
            .then(data => {
                const workbook = XLSX.read(new Uint8Array(data), { type: 'array' });
                const sheetName = workbook.SheetNames[0];
                const sheet = workbook.Sheets[sheetName];
                const range = XLSX.utils.decode_range(sheet['!ref']);

                const months = [];
                const croreData = [];
                const thousand1 = [];
                const thousand2 = [];
                const thousand3 = [];

                for (let i = range.s.r + 1; i <= range.e.r; i++) {
                    const cellMonth = sheet[XLSX.utils.encode_cell({ r: i, c: 0 })];
                    const cellCrore = sheet[XLSX.utils.encode_cell({ r: i, c: 1 })];
                    const cellThousand1 = sheet[XLSX.utils.encode_cell({ r: i, c: 2 })];
                    const cellThousand2 = sheet[XLSX.utils.encode_cell({ r: i, c: 3 })];
                    const cellThousand3 = sheet[XLSX.utils.encode_cell({ r: i, c: 4 })];

                    months.push(cellMonth.w);
                    croreData.push(cellCrore.v);
                    thousand1.push(cellThousand1.v);
                    thousand2.push(cellThousand2.v);
                    thousand3.push(cellThousand3.v);
                }

                // Create the chart
                const ctx = document.getElementById('myChart').getContext('2d');
                const myChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: months,
                        datasets: [
                            {
                                label: 'Detail of upload during the month (Amount)',
                                data: croreData,
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 2,
                                pointBackgroundColor: 'rgba(54, 162, 235, 1)',
                                fill: false,
                                yAxisID: 'y-axis-1'
                            },
                            {
                                label: 'No. of subscribers registered',
                                data: thousand1,
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 2,
                                pointBackgroundColor: 'rgba(255, 99, 132, 1)',
                                fill: false,
                                yAxisID: 'y-axis-2'
                            },
                            {
                                label: 'No. of subscribers whose NPS deduction has been made during the month',
                                data: thousand2,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                borderWidth: 2,
                                pointBackgroundColor: 'rgba(75, 192, 192, 1)',
                                fill: false,
                                yAxisID: 'y-axis-2'
                            },
                            {
                                label: 'No. of subscribers whose NPS deduction has been uploaded on CRA-NPS during the month',
                                data: thousand3,
                                borderColor: 'rgba(255, 159, 64, 1)',
                                borderWidth: 2,
                                pointBackgroundColor: 'rgba(255, 159, 64, 1)',
                                fill: false,
                                yAxisID: 'y-axis-2'
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        aspectRatio: 2,
                        title: {
                            display: true,
                            text: 'Excel Data Dual Axis Line Graph',
                            position: 'top',
                            fontSize: 20,
                            fontColor: '#333'
                        },
                        scales: {
                            x: {
                                ticks: {
                                    autoSkip: false,
                                    maxRotation: 45,
                                    minRotation: 45
                                },
                                grid: {
                                    display: false
                                }
                            },
                            yAxes: [
                                {
                                    id: 'y-axis-1',
                                    type: 'linear',
                                    position: 'left',
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Crore Data',
                                        fontColor: 'rgba(54, 162, 235, 1)',
                                    },
                                    ticks: {
                                        beginAtZero: true,
                                        fontColor: 'rgba(54, 162, 235, 1)',
                                        callback: function (value) {
                                            return value / 10000000 + ' Crores';
                                        }
                                    },
                                    grid: {
                                        color: 'rgba(54, 162, 235, 0.2)'
                                    }
                                },
                                {
                                    id: 'y-axis-2',
                                    type: 'linear',
                                    position: 'right',
                                    scaleLabel: {
                                        display: true,
                                        labelString: 'Thousands Data',
                                        fontColor: 'rgba(255, 99, 132, 1)',
                                    },
                                    ticks: {
                                        beginAtZero: true,
                                        fontColor: 'rgba(255, 99, 132, 1)',
                                        callback: function (value) {
                                            return value / 1000 + ' Thousands';
                                        }
                                    },
                                    grid: {
                                        color: 'rgba(255, 99, 132, 0.2)'
                                    }
                                }
                            ]
                        },
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function (context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        label += context.parsed.y;
                                        return label;
                                    }
                                }
                            }
                        }
                    }
                });
            })
            .catch(error => console.error('Error fetching Excel file:', error));
    </script>
</body>
</html>